df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
rm(list = ls())
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
rm(list = ls())
path = getwd()
path = getwd('.')
path = getwd('..')
path = getwd('../')
setwd(~/)
path = dirname(getwd())
path
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(path + "data/climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(paste(path + "data/climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv"),sep = ",", header = TRUE)
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(paste(path, "data/climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv"),sep = ",", header = TRUE)
path
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(paste(path, "/data/climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv"),sep = ",", header = TRUE)
path = paste(dirname(getwd()), "/", sep = "")
path
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", ),sep = ",", header = TRUE)
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv"),sep = ",", header = TRUE)
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv" ,sep = ",", header = TRUE)
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(data_path + "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv" ,sep = ",", header = TRUE)
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
rm(list = ls())
library(readxl)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
View(emissions)
library(reshape)
install.packages("reshape")
library(reshape)
# Emissions per sector
per_sector_emisssions = reshape(emissions, idvar = "sector", timevar = "Tonnes.Co2e", direction = "wide")
View(per_sector_emisssions)
# Emissions per sector
per_sector_emisssions = reshape(emissions, idvar = "country", timevar = "sector", direction = "wide")
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = TRUE)
colnames(per_sector_emisssions) = c("Country Code","Country Name", "Sector", "Emissions")
per_sector_emisssions = reshape(emissions, idvar = "country", timevar = "sector", direction = "wide")
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = TRUE)
colnames(per_sector_emisssions) = c("Country Code","Country Name", "Sector", "Emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = "country", timevar = "sector", direction = "wide")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = "country", timevar = "Sector", direction = "wide")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = "Country Code", timevar = "Sector", direction = "wide")
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = TRUE)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = F)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
r
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
ctor
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = F)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emisssions$emissions.total = total_emissions$Emissions
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emisssions$emissions.total = total_emissions$Emissions
per_sector_emisssions$emissions.total2 = sum(per_sector_emisssions[,3:-1])
per_sector_emisssions$emissions.total2 = sum(per_sector_emisssions[,3:11])
per_sector_emisssions$emissions.total2 = sum(per_sector_emisssions[1,3:11])
per_sector_emisssions$emissions.total2 = sum(per_sector_emisssions[*,3:11])
per_sector_emisssions$emissions.total2 = rowsuma(per_sector_emisssions[,3:11])
per_sector_emisssions$emissions.total2 = rowsums(per_sector_emisssions[,3:11])
per_sector_emisssions$emissions.total2 = rowsum(per_sector_emisssions[,3:11])
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emisssions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emisssions) = c("country code","country name", "sector", "emissions")
per_sector_emisssions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emisssions$emissions.total = total_emissions$Emissions
# Path to the data, which is universal for us
setwd(paste(dirname(getwd()))
# Path to the data, which is universal for us
setwd(paste(dirname(getwd())))
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls", sep = "")
gdp = read_excel(filename_gdp)
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total <- df[, c(1, 4, 2, 3, 5)]
View(df_total)
# Reorder variables
df_total = df[, c(1, 4, 2, 3, 5)]
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df$GDP)
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
df_per_sector = merge(per_sector_emissions, gdp, by = "Country Code", all = TRUE)
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emisssions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = TRUE)
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("country code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "country code", "2020")]
gdp = gdp[c("Country Name", "Country Code", "2020")]
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = TRUE)
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
gdp = gdp[c("Country Name", "Country Code", "2020")]
View(gdp)
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge per sector and GDP
names(gdp)[names(gdp) == "Country Code"] <- "country code"
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = TRUE)
View(df_per_sector)
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = F)
write.csv(df_per_sector, data_path)
write.csv(df_per_sector, file = "", data_path)
filename_per_sector_gdp = paste(data_path, "per_sector_emissions_gdp", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
filename_per_sector_gdp = paste(data_path, "per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
gdp = gdp[c("Country Code", "GDP")]
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
gdp = gdp[c("Country Code", "GDP")]
names(gdp)[names(gdp) == "Country Code"] <- "country code"
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = F)
filename_per_sector_gdp = paste(data_path, "per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
filename_per_sector_gdp = paste(data_path, "/output/per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
filename_per_sector_gdp = paste(data_path, "/output/per_sector_emissions_gdp2.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
filename_per_sector_gdp = paste(data_path, "/output/per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
pairs(df_per_sector)
pairs(df_per_sector[,3:])
df_per_sector[,3:]
df_per_sector[,3]
pairs(df_per_sector[,-1])
pairs(df_per_sector[,c(-1,-2)])
pairs(df_per_sector[,c(-1,-2)])
# Merge per sector and GDP
gdp = gdp[c("Country Code", "GDP")]
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
gdp = gdp[c("Country Code", "GDP")]
names(gdp)[names(gdp) == "Country Code"] <- "country code"
gdp$GDP = as.numeric(gdp$GDP)
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = F)
filename_per_sector_gdp = paste(data_path, "/output/per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
pairs(df_per_sector[,c(-1,-2)])
filename_data = paste(data_path, "data", sep = "")
data = read_excel(data)
#install.packages("reshape")
library(readxl)
library(reshape)
# Path to the data, which is universal for us
data_path = paste(dirname(getwd()), "/data/", sep = "")
# Filename of the data
filename_emissions = paste(data_path, "climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv", sep = "")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv(filename_emissions,sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Emissions per sector
per_sector_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full, emissions$sector), FUN = sum, na.rm = T)
colnames(per_sector_emissions) = c("country code","country name", "sector", "emissions")
per_sector_emissions = reshape(per_sector_emissions, idvar = c("country code", "country name") , timevar = "sector", direction = "wide")
per_sector_emissions$emissions.total = total_emissions$Emissions
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
filename_gdp = paste(data_path, "GDP_worldbank.xls", sep = "")
gdp = read_excel(filename_gdp)
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df_total = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df_total = df_total[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df_total$GDP = as.numeric(df_total$GDP)
df_total$Emissions_per_GDP = df_total$Emissions / df_total$GDP
# Merge per sector and GDP
gdp = gdp[c("Country Code", "GDP")]
names(gdp)[names(gdp) == "Country Code"] <- "country code"
gdp$GDP = as.numeric(gdp$GDP)
df_per_sector = merge(per_sector_emissions, gdp, by = "country code", all = F)
filename_per_sector_gdp = paste(data_path, "/output/per_sector_emissions_gdp.csv", sep = "")
write.csv(df_per_sector, file = filename_per_sector_gdp)
pairs(df_per_sector[,c(-1,-2)])
filename_data = paste(data_path, "data", sep = "")
data = read_excel(data)
filename_data = paste(data_path, "data", sep = "")
data = read_excel(filename_data)
filename_data = paste(data_path, "data", sep = "")
data = read(filename_data)
filename_data = paste(data_path, "data.csv", sep = "")
data = read.csv(filename_data)
View(data)
