plot1
plot1 = ggplot(mapping = aes(x = wind, y = SO2)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
plot1 = ggplot(mapping = aes(x = manu, y = SO2)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
plot1 = ggplot(mapping = aes(x = manu, y = wind)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# classify data into pollution_group = 1 (low pollution) and pollution_group = 2 (high polution)
data$pollution_group <- ifelse(data$SO2 < 26.0, 1, 2)
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = precip)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = manu, y = precip)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = popul, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = precip, y = predays)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = temp, y = predays)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = temp, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
polllution_lda = lda(pollution_group ~ wind + manu, data = data)
library(MASS)
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
# classify data into pollution_group = 1 (low pollution) and pollution_group = 2 (high polution)
data$pollution_group <- ifelse(data$SO2 < 26.0, 1, 2)
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
polllution_lda = lda(pollution_group ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$pollution_group)
plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
plot(polllution_lda.values$x[1:2,],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
# classify data into pollution_group = 1 (low pollution) and pollution_group = 2 (high polution)
data$pollution_group <- ifelse(data$SO2 < 26.0, 1, 2)
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
polllution_lda = lda(pollution_group ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$pollution_group)
plot(polllution_lda.values$x[1:2,],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
plot(polllution_lda.values$x[,1],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
############################################
# 1 - Create classes of pollution
############################################
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
# classify data into pollution_group = 1 (low pollution) and pollution_group = 2 (high polution)
data$pollution_group <- ifelse(data$SO2 < 14.4, 1, 2)
if (data$SO2 > 29.8) data$pollution_group <- 3
if (data$SO2 > 29.8) data$pollution_group == 3
if (data$SO2[] > 29.8) data$pollution_group == 3
if (data$SO2 > 29.8) data$pollution_group == 3
data$pollution_group <- ifelse(data$SO2 > 29.8, 3,  data$pollution_group)
#install.packages("HSAUR2")
############################################
# 0 - setup: install packages, get data
############################################
rm(list = ls())
library("HSAUR2")
library("ggplot2")
library("MASS")
data <- HSAUR2::USairpollution
############################################
# 1 - Create classes of pollution
############################################
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
# classify data into pollution_group = 1 (low pollution), 2 (medium pollution) and 3 (high pollution)
data$pollution_group <- ifelse(data$SO2 < 14.4, 1, 2)
data$pollution_group <- ifelse(data$SO2 > 29.8, 3,  data$pollution_group)
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
polllution_lda = lda(pollution_group ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$pollution_group)
plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
View(data)
############################################
# 1 - Create classes of pollution
############################################
# drop outliers: Chicago
data <- data[-c("Chicago"),]
############################################
# 1 - Create classes of pollution
############################################
# drop outliers: Chicago
data <- data[-"Chicago",]
data <- data[-7,]
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
#install.packages("HSAUR2")
############################################
# 0 - setup: install packages, get data
############################################
rm(list = ls())
library("HSAUR2")
library("ggplot2")
library("MASS")
data <- HSAUR2::USairpollution
############################################
# 1 - Create classes of pollution
############################################
# drop outliers: Chicago
data <- data[-7,]
# get quantiles of air pollution
quantile(data$SO2, probs = c(0.33,0.5,0.67))
# classify data into pollution_group = 1 (low pollution), 2 (medium pollution) and 3 (high pollution)
data$pollution_group <- ifelse(data$SO2 < 14.0, 1, 2)
data$pollution_group <- ifelse(data$SO2 > 29.13, 3,  data$pollution_group)
# plot data and classes
plot1 = ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
polllution_lda = lda(pollution_group ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$pollution_group)
plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = pollution_group), data = data)
plot1
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library("ggplot2")
library("MASS")
#obtaining the data
library(HSAUR2)
data <- HSAUR2::USairpollution
#Subsets without potential outliers Chicago and Phoenix (and both)
data_c <- data[-c(7),]
data_p <- data[-c(31),]
data_b <- data[-c(7,31),]
X <- as.matrix(data)
Xs <- scale(X)
R <- cov(Xs)
R
#with the subsets
#Chicago removed
X_c <- as.matrix(data_c)
Xs_c <- scale(X_c)
R_c <- cov(Xs_c)
R_c
#Phoenix removed
X_p <- as.matrix(data_p)
Xs_p <- scale(X_p)
R_p <- cov(Xs_p)
R_p
#both removed
X_b <- as.matrix(data_b)
Xs_b <- scale(X_b)
R_b <- cov(Xs_b)
R_b
d_euclidean <- dist(Xs)
d_manhattan <- dist(Xs, method="manhattan")
l <- eigen(R)$values
V <- eigen(R)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
wss = c(sum(Xs^2))
for (i in 2:10) {
km  = kmeans(Xs, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_c)
d_manhattan <- dist(Xs_c, method="manhattan")
l <- eigen(R_c)$values
V <- eigen(R_c)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_c%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_c)$x
km1 <- kmeans(Xs_c, centers = 3 )
km2 <- kmeans(Xs_c, centers = 4 )
km3 <- kmeans(Xs_c, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_c^2))
for (i in 2:10) {
km  = kmeans(Xs_c, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_p)
d_manhattan <- dist(Xs_p, method="manhattan")
l <- eigen(R_p)$values
V <- eigen(R_p)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_p%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_p)$x
km1 <- kmeans(Xs_p, centers = 3 )
km2 <- kmeans(Xs_p, centers = 4 )
km3 <- kmeans(Xs_p, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_p^2))
for (i in 2:10) {
km  = kmeans(Xs_p, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_b)
d_manhattan <- dist(Xs_b, method="manhattan")
l <- eigen(R_b)$values
V <- eigen(R_b)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_b%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_b)$x
km1 <- kmeans(Xs_b, centers = 3 )
km2 <- kmeans(Xs_b, centers = 4 )
km3 <- kmeans(Xs_b, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_b^2))
for (i in 2:10) {
km  = kmeans(Xs_b, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library("ggplot2")
library("MASS")
#obtaining the data
library(HSAUR2)
data <- HSAUR2::USairpollution
#Subsets without potential outliers Chicago and Phoenix (and both)
data_c <- data[-c(7),]
data_p <- data[-c(31),]
data_b <- data[-c(7,31),]
X <- as.matrix(data)
Xs <- scale(X)
R <- cov(Xs)
R
#with the subsets
#Chicago removed
X_c <- as.matrix(data_c)
Xs_c <- scale(X_c)
R_c <- cov(Xs_c)
R_c
#Phoenix removed
X_p <- as.matrix(data_p)
Xs_p <- scale(X_p)
R_p <- cov(Xs_p)
R_p
#both removed
X_b <- as.matrix(data_b)
Xs_b <- scale(X_b)
R_b <- cov(Xs_b)
R_b
d_euclidean <- dist(Xs)
d_manhattan <- dist(Xs, method="manhattan")
l <- eigen(R)$values
V <- eigen(R)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean distance - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhattan distance - Complete linkage", cex=0.5)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:1],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
View(km1)
clus1
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
groupwiseMean(data = data, var = SO2, group = cluster)
library("dplyr")
data %>%
group_by(cluster) %>%
mean(SO2)
data %>%
group_by(cluster) %>%
mean(SO2)
data %>%
group_by(cluster) %>%
mean(SO2, na.rm = TRUE)
data %>%
group_by(data$cluster) %>%
mean(data$SO2)
data %>%
group_by(cluster) %>%
summarize(mean_so2 = mean(SO2))
