setwd('..')
getwd()
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020",sep = ",", header = TRUE)
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
View(emissions)
total_emissions = aggregate(emissions, by = list(emissions$country), FUN = sum)
total_emissions = aggregate(emissions, by = list(emissions$country), FUN = sum)
emissions = emissions[1:2]
total_emissions = aggregate(emissions, by = list(emissions$country), FUN = sum)
total_emissions = aggregate(emissions, by = list(emissions$country_full), FUN = sum)
View(emissions)
emissions$country_full
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country_full), FUN = sum)
View(total_emissions)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country), FUN = sum)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE)
gdp = read.csv("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv",sep = ",", header = TRUE)
gdp = read.csv("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv",sep = ",")
gdp = read.csv("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv")
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", sep = ",")
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", sep = ";")
View(gdp)
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote="", comment.char = "",sep = ";")
View(gdp)
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", comment.char = "",sep = ";")
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", comment.char = "",sep = ";", header = TRUE)
gdp = read.table(head -1 "GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", comment.char = "",sep = ",", header = TRUE)
gdp = read.table(head -1 "GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", fill=TRUE, comment.char = "",sep = ";", header = TRUE)
gdp = read.table(head -1 "GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", fill=TRUE, comment.char = "",sep = ";", header = TRUE)
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", fill=TRUE, comment.char = "",sep = ";", header = TRUE)
View(gdp)
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", fill=TRUE, comment.char = "",sep = ",", header = TRUE)
View(gdp)
gdp = read.table("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4701247.csv", quote = "", fill=TRUE, comment.char = "",sep = "","", header = TRUE)
integer(gdp)
Library(readxl)
library(readxl)
install.packages("readxl")
library(readxl)
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
View(gdp)
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colenames(gdp) = gdp[3,]
colnames(gdp) = gdp[3,]
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
View(gdp)
gdp = gdp[-1:3,]
gdp = gdp[-(1:3),]
gdp = gdp[-(1:3),"Country Name", "Country Code", "Indicator Name", "2020"]
gdp = gdp[-(1:3),"Country Name"& "Country Code"& "Indicator Name"& "2020"]
gdp = gdp[-(1:3),"Country Name"& "Country Code"& "Indicator Name"& 2020]
gdp = gdp["Country Name"& "Country Code"& "Indicator Name"& "2020"]
gdp = gdp["Country Name", "Country Code","Indicator Name", "2020"]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
install.packages(c("httr", "jsonlite"))
library(httr)
library(jsonlite)
test = GET("https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2020&start=2020")
View(test)
res
rm(list = ls())
install.packages("readxl")
library(readxl)
setwd('..')
getwd()
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
library(readxl)
setwd('..')
getwd()
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
getwd()
library(readxl)
getwd()
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
setwd('.')
getwd()
setwd('...')
setwd('..')
getwd()
rstudioapi::getSourceEditorContext()$path
setwd(rstudioapi::getSourceEditorContext()$path)
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE)
test = GET("https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2020&start=2020")
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
gdp = gdp[-(1:3),]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
View(test)
rm(list = ls())
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE)
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
gdp = gdp[-(1:3),]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
View(gdp)
View(total_emissions)
df = merge(total_emissions, gdp)
View(df)
View(total_emissions)
gdp = read_excel("GDP_Worldbank/API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(total_emissions) = c("Country Code", "Emissions")
View(total_emissions)
df = merge(total_emissions, gdp, by "Country Code")
df = merge(total_emissions, gdp, by = intersect ("Country Code", "Country Code"))
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
gdp = gdp[-(1:3),]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
df = merge(total_emissions, gdp, by = "Country Code")
View(df)
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
View(emissions)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE, drop = F)
#emissions = emissions[1:2]
total_emissions = aggregate(data = emissions, subset = emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE,)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions, subset = emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE,)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions, subset = emissions[,1], by = list(emissions$country), FUN = sum, na.rm = TRUE)
View(emissions)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions, subset = emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
colnames(total_emissions) = c("Country Code","Country_Full", "Emissions")
colnames(total_emissions) = c("xCountry Code","xCountry_Full", "Emissions")
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
colnames(total_emissions) = c("xCountry Code","xCountry_Full", "Emissions")
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
gdp = gdp[-(1:3),]
gdp = gdp[c("yCountry Name", "yCountry Code","Indicator Name", "2020")]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
colnames(total_emissions) = c("Country Code","xCountry_Full", "Emissions")
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Get Emission Data
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
#emissions = emissions[1:2]
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
colnames(total_emissions) = c("Country Code","xCountry_Full", "Emissions")
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
colnames(gdp) = gdp[3,]
gdp = gdp[-(1:3),]
gdp = gdp[c("Country Name", "Country Code","Indicator Name", "2020")]
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
colnames(total_emissions) = c("Country Code","Emissions_Country_Name", "Emissions")
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
colnames(total_emissions) = c("Country Code","Emissions Country Name", "Emissions")
df2 <- df[, c(1, 4, 2, 3, 5:6)]
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
df2 <- df[, c(1, 4, 2, 3, 5:6)]
View(df2)
df <- df[, c(1, 4, 2, 3, 5:6)]
View(df2)
names(gdp)[names(gdp) == "2020"] <- "GDP"
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
df <- df[, c(1, 4, 2, 3, 5:6)]
df$Emissions_per_GDP = df$Emissions / df$GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
summary(gdp$`Indicator Name`)
length(unique(gdp$`Indicator Name`))
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2020&start=2020
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
View(gdp)
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5:6)]
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
rm(list = ls())
library(readxl)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Upf/MDA/Project")
# Loading the Climate Trace Emissions data that Charles put into the WhattsApp Group
emissions = read.csv("climatetrace_emissions_by_subsector_timeseries_interval_year_since_2020_to_2020.csv",sep = ",", header = TRUE)
# Aggregating Emissions over each Country
total_emissions = aggregate(emissions[,1], by = list(emissions$country, emissions$country_full), FUN = sum, na.rm = TRUE)
# Renaming variables
colnames(total_emissions) = c("Country Code","Emissions Data Country Name", "Emissions")
# Reading the GDP Excel Sheet from https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2021&start=1960
gdp = read_excel("API_NY.GDP.MKTP.CD_DS2_en_excel_v2_4701247.xls")
# Renaming variables to the correct names in the third row
colnames(gdp) = gdp[3,]
# Drop the first three irrelevant rows
gdp = gdp[-(1:3),]
# Drop all irrelevant variables
gdp = gdp[c("Country Name", "Country Code", "2020")]
# Rename the 2020 GDP variable simply to GDP
names(gdp)[names(gdp) == "2020"] <- "GDP"
# Merge GDP and Emissions data. I kept non matching entries which have to be checked if the country code is wrong
df = merge(total_emissions, gdp, by = "Country Code", all = TRUE)
# Reorder variables
df <- df[, c(1, 4, 2, 3, 5)]
# Calculate Emissions per GDP
df$GDP = as.numeric(df$GDP)
df$Emissions_per_GDP = df$Emissions / df$GDP
