knitr::opts_chunk$set(echo = TRUE)
#obtaining the data
library(HSAUR2)
data <- HSAUR2::USairpollution
#Subsets without potential outliers Chicago and Phoenix (and both)
data_c <- data[-c(7),]
data_p <- data[-c(31),]
data_b <- data[-c(7,31),]
X <- as.matrix(data)
Xs <- scale(X)
R <- cov(Xs)
R
#with the subsets
#Chicago removed
X_c <- as.matrix(data_c)
Xs_c <- scale(X_c)
R_c <- cov(Xs_c)
R_c
#Phoenix removed
X_p <- as.matrix(data_p)
Xs_p <- scale(X_p)
R_p <- cov(Xs_p)
R_p
#both removed
X_b <- as.matrix(data_b)
Xs_b <- scale(X_b)
R_b <- cov(Xs_b)
R_b
d_euclidean <- dist(Xs)
d_manhattan <- dist(Xs, method="manhattan")
l <- eigen(R)$values
V <- eigen(R)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
clus3 <- km3$cluster
knitr::opts_chunk$set(echo = TRUE)
#obtaining the data
library(HSAUR2)
data <- HSAUR2::USairpollution
#Subsets without potential outliers Chicago and Phoenix (and both)
data_c <- data[-c(7),]
data_p <- data[-c(31),]
data_b <- data[-c(7,31),]
X <- as.matrix(data)
Xs <- scale(X)
R <- cov(Xs)
R
#with the subsets
#Chicago removed
X_c <- as.matrix(data_c)
Xs_c <- scale(X_c)
R_c <- cov(Xs_c)
R_c
#Phoenix removed
X_p <- as.matrix(data_p)
Xs_p <- scale(X_p)
R_p <- cov(Xs_p)
R_p
#both removed
X_b <- as.matrix(data_b)
Xs_b <- scale(X_b)
R_b <- cov(Xs_b)
R_b
d_euclidean <- dist(Xs)
d_manhattan <- dist(Xs, method="manhattan")
l <- eigen(R)$values
V <- eigen(R)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs^2))
for (i in 2:10) {
km  = kmeans(Xs, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_c)
d_manhattan <- dist(Xs_c, method="manhattan")
l <- eigen(R_c)$values
V <- eigen(R_c)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_c%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_c)$x
km1 <- kmeans(Xs_c, centers = 3 )
km2 <- kmeans(Xs_c, centers = 4 )
km3 <- kmeans(Xs_c, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_c^2))
for (i in 2:10) {
km  = kmeans(Xs_c, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_p)
d_manhattan <- dist(Xs_p, method="manhattan")
l <- eigen(R_p)$values
V <- eigen(R_p)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_p%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_p)$x
km1 <- kmeans(Xs_p, centers = 3 )
km2 <- kmeans(Xs_p, centers = 4 )
km3 <- kmeans(Xs_p, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_p^2))
for (i in 2:10) {
km  = kmeans(Xs_p, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
d_euclidean <- dist(Xs_b)
d_manhattan <- dist(Xs_b, method="manhattan")
l <- eigen(R_b)$values
V <- eigen(R_b)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs_b%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs_b)$x
km1 <- kmeans(Xs_b, centers = 3 )
km2 <- kmeans(Xs_b, centers = 4 )
km3 <- kmeans(Xs_b, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
wss = c(sum(Xs_b^2))
for (i in 2:10) {
km  = kmeans(Xs_b, centers = i)
wss = c(wss,sum(km$withinss))
}
plot(wss,xlab="k",ylab="wss",main="WSS-Euclidean")
View(km2)
data$cluster <- clus2
View(km2)
data_b$cluster <- clus2
View(data_b)
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = clus2), data = data_b)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library("ggplot2")
library("MASS")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library("ggplot2")
library("MASS")
#obtaining the data
library(HSAUR2)
data <- HSAUR2::USairpollution
#Subsets without potential outliers Chicago and Phoenix (and both)
data_c <- data[-c(7),]
data_p <- data[-c(31),]
data_b <- data[-c(7,31),]
X <- as.matrix(data)
Xs <- scale(X)
R <- cov(Xs)
R
#with the subsets
#Chicago removed
X_c <- as.matrix(data_c)
Xs_c <- scale(X_c)
R_c <- cov(Xs_c)
R_c
#Phoenix removed
X_p <- as.matrix(data_p)
Xs_p <- scale(X_p)
R_p <- cov(Xs_p)
R_p
#both removed
X_b <- as.matrix(data_b)
Xs_b <- scale(X_b)
R_b <- cov(Xs_b)
R_b
d_euclidean <- dist(Xs)
d_manhattan <- dist(Xs, method="manhattan")
l <- eigen(R)$values
V <- eigen(R)$vectors #pca
# S^(-1/2)
Sinvsqrt = V%*%diag(1/sqrt(l))
# X in mahalanobis space
Xinvsqrt = Xs%*%Sinvsqrt
d_mahalanobis <- as.dist(dist(Xinvsqrt))
hc <- hclust(d_euclidean)
plot(hc ,hang = -1, main="Euclidean dist - Complete linkage", cex=0.5)
hc <- hclust(d_manhattan)
plot(hc ,hang = -1, main="Manhatta dist - Complete linkage", cex=0.5)
pc <- prcomp(Xs)$x
km1 <- kmeans(Xs, centers = 3 )
km2 <- kmeans(Xs, centers = 4 )
km3 <- kmeans(Xs, centers = 5 )
clus1 <- km1$cluster
clus2 <- km2$cluster
clus3 <- km3$cluster
plot(pc[,1],pc[,2],col=clus1,pch=clus1,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=3")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus2,pch=clus2,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=4")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
plot(pc[,1],pc[,2],col=clus3,pch=clus3,xlab='PC1',ylab='PC2',main="Plot with k-mean with k=5")
text(pc[,1]-0.1,pc[,2]-0.1, labels=rownames(X), cex=0.6)
data_b$cluster <- clus2
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = clus2), data = data)
plot1
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = clus2), data = data)
plot1
polllution_lda = lda(clus2 ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$clus2)
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = clus2), data = data)
plot1
polllution_lda = lda(clus2 ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- as.numeric(data$clus2)
plot2 <- plot(polllution_lda.values$x[,1:3],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = clus2), data = data)
plot1
polllution_lda = lda(clus2 ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$clus2
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$clus2
View(data)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],colour=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],colours=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = popul)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + popul, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = popul)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + popul, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus3
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = popul)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + popul, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = wind, y = popul)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ wind + popul, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus2
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
data$cluster <- clus1
# plot data and classes
plot1 <- ggplot(mapping = aes(x = precip, y = manu)) +
geom_point(aes(colour = cluster), data = data)
plot1
polllution_lda = lda(cluster ~ precip + manu, data = data)
polllution_lda
polllution_lda.values <- predict(polllution_lda)
col <- data$cluster
plot2 <- plot(polllution_lda.values$x[,1:2],col=col,xlab='Linear discriminant 1',
ylab='Linear discriminant 2',cex.lab=1.5)
